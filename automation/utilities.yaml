- alias: 'Utility/Solar/Inverter/TurnOn'
  id: '202310221601001'
  trigger:
    - platform: state
      entity_id: sensor.electricity_rate
      to: "Peak"
    - platform: sun
      event: sunrise
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.inverter_inverter_on_off


- alias: 'Utility/Solar/Inverter/TurnOff'
  id: '202310221637001'
  trigger:
    - platform: state
      entity_id: sensor.electricity_rate
      to: "Off-peak"
    - platform: sun
      event: sunset
      offset: "00:15:00"
  condition:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - condition: state
      entity_id: sensor.electricity_rate
      state: 'Off-peak'
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.inverter_inverter_on_off

- alias: 'Utility/Solar/Battery/OffPeakCharge'
  id: '202310122201001'
  trigger:
    - platform: time
      at: '03:00:00'
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
  action:
    - service: logbook.log
      data:
        name: House Battery
        message: >-
          Charging to {{[(100-5*(states.sensor.energy_production_tomorrow_2.state|float)) | round,0] | max }}
    - service: switch.turn_on
      target:
        entity_id: switch.inverter_inverter_on_off
    - wait_template: "{{(states.sensor.battery_status.state)!='Offline'}}"
      timeout: '00:30:00'
    - service: huawei_solar.forcible_charge
      data:
        power: 2000
        duration: 180
        device_id: 2486ef0091cb6cd1473b77386446773c
    - wait_template: "{{(states.sensor.battery_state_of_capacity.state|int) > ([(100-5*(states.sensor.energy_production_today.state|float)) | round,0] | max) }}"
      timeout: '03:00:00'
    - service: huawei_solar.stop_forcible_charge
      data:
        device_id: 2486ef0091cb6cd1473b77386446773c
    - service: switch.turn_off
      target:
        entity_id: switch.inverter_inverter_on_off

- alias: 'UtilityMeters/Peak'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.electricity_rate
  condition:
    - condition: state
      entity_id: sensor.electricity_rate
      state: 'Peak'
  action:
    - service: select.select_option
      target:
        entity_id: select.daily_energy_in
      data:
        option: "peak"
    - service: select.select_option
      target:
        entity_id: select.daily_energy_out
      data:
        option: "peak"
    - service: select.select_option
      target:
        entity_id: select.monthly_energy_in
      data:
        option: "peak"
    - service: select.select_option
      target:
        entity_id: select.daily_solar_energy
      data:
        option: "peak"
    - service: select.select_option
      target:
        entity_id: select.monthly_solar_energy
      data:
        option: "peak"

- alias: 'UtilityMeters/OffPeak'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.electricity_rate
  condition:
    - condition: state
      entity_id: sensor.electricity_rate
      state: 'Off-peak'
  action:
    - service: select.select_option
      target:
        entity_id: select.daily_energy_in
      data:
        option: "offpeak"
    - service: select.select_option
      target:
        entity_id: select.daily_energy_out
      data:
        option: "offpeak"
    - service: select.select_option
      target:
        entity_id: select.monthly_energy_in
      data:
        option: "offpeak"
    - service: select.select_option
      target:
        entity_id: select.daily_solar_energy
      data:
        option: "offpeak"
    - service: select.select_option
      target:
        entity_id: select.monthly_solar_energy
      data:
        option: "offpeak"

