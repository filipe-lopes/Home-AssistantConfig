- platform: template
  sensors:
    home_power_consuption:
      friendly_name: Total power
      value_template: "{{((-1)*(states.sensor.power_meter_active_power.state|float)+(states.sensor.inverter_active_power.state|float))|round}}"
      unit_of_measurement: "W"
    utility_power:
      friendly_name: Utility power
      value_template: "{{(-1)*(states.sensor.power_meter_active_power.state|float|round)}}"
      unit_of_measurement: "W"
    solar_power:
      friendly_name: Solar power
      value_template: "{{states.sensor.inverter_active_power.state|round}}"
      unit_of_measurement: "W"
    energy_today:
      value_template: "{{states.sensor.daily_energy_in_peak.state|int + states.sensor.daily_energy_in_offpeak.state|int}}"
      unit_of_measurement: "kWh"
    energy_thismonth:
      value_template: "{{states.sensor.monthly_energy_in_peak.state|int + states.sensor.monthly_energy_in_offpeak.state|int}}"
      unit_of_measurement: "kWh"
    energy_solar_today:
      value_template: "{{states.sensor.daily_solar_energy_peak.state|int + states.sensor.daily_solar_energy_offpeak.state|int}}"
      unit_of_measurement: "kWh"
    energy_solar_thismonth:
      value_template: "{{states.sensor.monthly_solar_energy_peak.state|int + states.sensor.monthly_solar_energy_offpeak.state|int}}"
      unit_of_measurement: "kWh"
    energy_bill_prediction:
      value_template: "{{((((states('sensor.monthly_energy_in_offpeak') | int)/(now().strftime('%-d')|int)*30*0.0899 +(states('sensor.monthly_energy_in_peak') | int)/(now().strftime('%-d')|int)*30*0.1932)*0.93+11.49)*1.23+3.5) | int}}"
      unit_of_measurement: "Eur"
    solararray1_power:
      value_template: "{{ ((states('sensor.solar_power') | float) - (states('sensor.peimar_inverter_01_ac_power') | float)) | round (1) }}"
      unit_of_measurement: "W"
    

